[; file attributes
 {:db/ident :file/uri
  :db/doc "The identifying uri of this file. This is unique and can be used as an identifier since there can only ever be one file per uri. This value will be duplciated in :file/expected-uri if the file is expected to exist and :file/remote-storage-uri if the file is found in remote storage."
  :db/unique :db.unique/identity
  :db/valueType :db.type/uri
  :db/cardinality :db.cardinality/one}

 {:db/ident :file/expected-uri
  :db/doc "The expected uri of this file. This will be used to find its matching remote storage uri. If this field is populated it means this file is expected to exist and should eventually have a matching :file/remote-storage-uri."
  :db/unique :db.unique/value
  :db/valueType :db.type/uri
  :db/cardinality :db.cardinality/one}

 {:db/ident :file/expected-hash
  :db/doc "The expected computed hash of this file. This will be used to verify the file was uploaded correctly by matching it with the computed hash of a matching remote storage file. The expected hash is not a unique identifier because the same file couild be expected in multiple places."
  :db/valueType :db.type/string
  :db/cardinality :db.cardinality/one}

 {:db/ident :file/remote-storage-uri
  :db/doc "The full uri of the remote storage file. If this field exists it means the uri was found in the remote storage."
  :db/unique :db.unique/value
  :db/valueType :db.type/uri
  :db/cardinality :db.cardinality/one}

 {:db/ident :file/remote-storage-computed-hash
  :db/doc "The computed hash of the remote storage file. Even though this is unique per file contents it cannot be used as an identifier since there is nothing stopping a file from being copied multiple times across remote storage."
  :db/valueType :db.type/string
  :db/cardinality :db.cardinality/one}


 ; specimen attributes
 {:db/ident :specimen/specimen-id
  :db/doc "The generated id of the specimen"
  :db/unique :db.unique/identity
  :db/valueType :db.type/uuid
  :db/cardinality :db.cardinality/one}

 {:db/ident :specimen/type
  :db/doc "specimen type - mostly used to test frequencies now."
  :db/valueType :db.type/string
  :db/cardinality :db.cardinality/one}

 {:db/ident :specimen/files
  :db/valueType :db.type/ref
  :db/cardinality :db.cardinality/many}


 ; participant attributes
 {:db/ident :participant/participant-id
  :db/doc "The id of the participant"
  :db/unique :db.unique/identity
  :db/valueType :db.type/uuid
  :db/cardinality :db.cardinality/one}

 {:db/ident :participant/specimens
  :db/doc "ref to specimens"
  :db/valueType :db.type/ref
  :db/cardinality :db.cardinality/many}

 {:db/ident :participant/files
  :db/doc "ref to files"
  :db/valueType :db.type/ref
  :db/cardinality :db.cardinality/many}

 ;user
;;  {:db/ident :user/user-id
;;   :db/doc "The id of the participant"
;;   :db/unique :db.unique/identity
;;   :db/valueType :db.type/uuid
;;   :db/cardinality :db.cardinality/one}

;;  {:db/ident :user/email
;;   :db/doc "The email of the user"
;;   :db/unique :db.unique/identity
;;   :db/valueType :db.type/string
;;   :db/cardinality :db.cardinality/many}

 ;authz
;;  {:db/ident :authz/authz-id
;;   :db/doc "The id of the authz link"
;;   :db/unique :db.unique/identity
;;   :db/valueType :db.type/uuid
;;   :db/cardinality :db.cardinality/one}

;;  {:db/ident :authz/authz-node
;;   :db/doc "The ref to a user or group"
;;   :db/valueType :db.type/ref
;;   :db/cardinality :db.cardinality/one}

;;  {:db/ident :authz/target
;;   :db/doc "The ref to a user or group"
;;   :db/valueType :db.type/ref
;;   :db/cardinality :db.cardinality/one}
 ]