[; account attributes
 {:db/ident :account/account-id
  :db/doc "The id of the account"
  :db/unique :db.unique/identity
  :db/valueType :db.type/string
  :db/cardinality :db.cardinality/one}

 {:db/ident :account/display-name
  :db/doc "The first name and last name of the account"
  :db/valueType :db.type/string
  :db/cardinality :db.cardinality/one}

 {:db/ident :account/picture-url
  :db/doc "The picture-url of the account"
  :db/valueType :db.type/string
  :db/cardinality :db.cardinality/one}

 {:db/ident :account/conversations
  :db/doc "The conversations of the account"
  :db/valueType :db.type/ref
  :db/isComponent true
  :db/cardinality :db.cardinality/many}

 {:db/ident :account/recipes
  :db/doc "The recipes of the account"
  :db/valueType :db.type/ref
  :db/isComponent true
  :db/cardinality :db.cardinality/many}

 {:db/ident :account/favorite-recipes
  :db/doc "The favorited recipes of the account"
  :db/valueType :db.type/ref
  :db/cardinality :db.cardinality/many}


 ; recipe attributes
 {:db/ident :recipe/recipe-id
  :db/doc "The id of the recipe"
  :db/unique :db.unique/identity
  :db/valueType :db.type/uuid
  :db/cardinality :db.cardinality/one}

 {:db/ident :recipe/owner
  :db/doc "The name of the recipe"
  :db/valueType :db.type/ref
  :db/cardinality :db.cardinality/one}

 {:db/ident :recipe/display-name
  :db/doc "The name of the recipe"
  :db/valueType :db.type/string
  :db/cardinality :db.cardinality/one}

 {:db/ident :recipe/prep-time
  :db/doc "The preparation time of the recipe"
  :db/valueType :db.type/long
  :db/cardinality :db.cardinality/one}

 {:db/ident :recipe/favorite-count
  :db/doc "The number of times a recipe has been marked as favorite"
  :db/valueType :db.type/long
  :db/noHistory true
  :db/cardinality :db.cardinality/one}

 {:db/ident :recipe/image-url
  :db/doc "The url of the recipe image"
  :db/valueType :db.type/string
  :db/cardinality :db.cardinality/one}

 {:db/ident :recipe/public?
  :db/doc "The flag if a recipe is public or draft"
  :db/valueType :db.type/boolean
  :db/cardinality :db.cardinality/one}

 {:db/ident :recipe/steps
  :db/doc "The steps of the recipe"
  :db/isComponent true
  :db/valueType :db.type/ref
  :db/cardinality :db.cardinality/many}

 {:db/ident :recipe/ingredients
  :db/doc "The ingredients of the recipe"
  :db/isComponent true
  :db/valueType :db.type/ref
  :db/cardinality :db.cardinality/many}


 ; step attributes
 {:db/ident :step/step-id
  :db/doc "The id of the step"
  :db/valueType :db.type/uuid
  :db/unique :db.unique/identity
  :db/cardinality :db.cardinality/one}

 {:db/ident :step/description
  :db/doc "The description of the step"
  :db/valueType :db.type/string
  :db/cardinality :db.cardinality/one}

 {:db/ident :step/sort-order
  :db/doc "The sort order of the step"
  :db/valueType :db.type/long
  :db/cardinality :db.cardinality/one}


 ; ingredient attributes
 {:db/ident :ingredient/ingredient-id
  :db/doc "The id of the ingredient"
  :db/valueType :db.type/uuid
  :db/unique :db.unique/identity
  :db/cardinality :db.cardinality/one}

 {:db/ident :ingredient/display-name
  :db/doc "The name of the ingredient"
  :db/valueType :db.type/string
  :db/cardinality :db.cardinality/one}

 {:db/ident :ingredient/amount
  :db/doc "The amount of the ingredient"
  :db/valueType :db.type/long
  :db/cardinality :db.cardinality/one}

 {:db/ident :ingredient/measure
  :db/doc "The measure of the ingredient"
  :db/valueType :db.type/string
  :db/cardinality :db.cardinality/one}

 {:db/ident :ingredient/sort-order
  :db/doc "The sort order of the ingredient"
  :db/valueType :db.type/long
  :db/cardinality :db.cardinality/one}


 ; conversation attributes
 {:db/ident :conversation/conversation-id
  :db/doc "The id of the conversation"
  :db/valueType :db.type/uuid
  :db/unique :db.unique/identity
  :db/cardinality :db.cardinality/one}

 {:db/ident :conversation/messages
  :db/doc "The messages of the conversation"
  :db/isComponent true
  :db/valueType :db.type/ref
  :db/cardinality :db.cardinality/many}

 {:db/ident :conversation/participants
  :db/doc "The participants (account) ids of the conversation"
  :db/valueType :db.type/ref
  :db/cardinality :db.cardinality/many}


 ; message attributes
 {:db/ident :message/message-id
  :db/doc "The id of the message"
  :db/valueType :db.type/uuid
  :db/unique :db.unique/identity
  :db/cardinality :db.cardinality/one}

 {:db/ident :message/body
  :db/doc "The body of the message"
  :db/valueType :db.type/string
  :db/cardinality :db.cardinality/one}

 {:db/ident :message/owner
  :db/doc "The owner's id of the message"
  :db/valueType :db.type/ref
  :db/cardinality :db.cardinality/one}

 {:db/ident :message/created-at
  :db/doc "The created at of the message"
  :db/valueType :db.type/instant
  :db/cardinality :db.cardinality/one}

 {:db/ident :message/read-by
  :db/doc "The message ready by flag"
  :db/valueType :db.type/ref
  :db/cardinality :db.cardinality/many}

 ; remote-storage-file attribute
 {:db/ident :remote-storage-file/remote-storage-file-id
  :db/doc "The generated id of the remote storage file."
  :db/unique :db.unique/identity
  :db/valueType :db.type/uuid
  :db/cardinality :db.cardinality/one}

 {:db/ident :remote-storage-file/uri
  :db/doc "The full uri of the remote storage file. This is unique and can be used as an identifier since there can only ever be one file per uri."
  :db/unique :db.unique/identity
  :db/valueType :db.type/uri
  :db/cardinality :db.cardinality/one}

 {:db/ident :remote-storage-file/hash
  :db/doc "The computed hash of the remote storage file. Even though this is unique per file contents it cannot be used as an identifier since there is nothing stopping a file from being copied multiple times across remote storage."
  :db/valueType :db.type/string
  :db/cardinality :db.cardinality/one}

 ; file attributes
 {:db/ident :file/file-id
  :db/doc "The generated id of the file"
  :db/unique :db.unique/identity
  :db/valueType :db.type/uuid
  :db/cardinality :db.cardinality/one}

 {:db/ident :file/external-id
  :db/doc "External id used to reference this file. This will be used to link the file with other scientific entities."
  :db/valueType :db.type/string
  :db/cardinality :db.cardinality/one}

 {:db/ident :file/expected-uri
  :db/doc "The expected uri of this file. This will be used to find its matching remote storage file."
  :db/unique :db.unique/identity
  :db/valueType :db.type/uri
  :db/cardinality :db.cardinality/one}

 {:db/ident :file/expected-hash
  :db/doc "The expected computed hash of this file. This will be used to verify the file was uploaded correctly by matching it with the computed hash of a matching remote storage file. The expected hash is not a unique identifier because the same file couild be expected in multiple places."
  :db/valueType :db.type/string
  :db/cardinality :db.cardinality/one}

 {:db/ident :file/type
  :db/doc "file type - mostly used to test frequencies now."
  :db/valueType :db.type/string
  :db/cardinality :db.cardinality/one}


 ; specimen attributes
 {:db/ident :specimen/specimen-id
  :db/doc "The generated id of the specimen"
  :db/unique :db.unique/identity
  :db/valueType :db.type/uuid
  :db/cardinality :db.cardinality/one}

 {:db/ident :specimen/type
  :db/doc "specimen type - mostly used to test frequencies now."
  :db/valueType :db.type/string
  :db/cardinality :db.cardinality/one}

 {:db/ident :specimen/files
  :db/valueType :db.type/ref
  :db/cardinality :db.cardinality/many}


 ; participant attributes
 {:db/ident :participant/participant-id
  :db/doc "The id of the participant"
  :db/unique :db.unique/identity
  :db/valueType :db.type/uuid
  :db/cardinality :db.cardinality/one}

 {:db/ident :participant/specimens
  :db/doc "ref to specimens"
  :db/valueType :db.type/ref
  :db/cardinality :db.cardinality/many}

 {:db/ident :participant/files
  :db/doc "ref to files"
  :db/valueType :db.type/ref
  :db/cardinality :db.cardinality/many}

 ;user
;;  {:db/ident :user/user-id
;;   :db/doc "The id of the participant"
;;   :db/unique :db.unique/identity
;;   :db/valueType :db.type/uuid
;;   :db/cardinality :db.cardinality/one}

;;  {:db/ident :user/email
;;   :db/doc "The email of the user"
;;   :db/unique :db.unique/identity
;;   :db/valueType :db.type/string
;;   :db/cardinality :db.cardinality/many}

 ;authz
;;  {:db/ident :authz/authz-id
;;   :db/doc "The id of the authz link"
;;   :db/unique :db.unique/identity
;;   :db/valueType :db.type/uuid
;;   :db/cardinality :db.cardinality/one}

;;  {:db/ident :authz/authz-node
;;   :db/doc "The ref to a user or group"
;;   :db/valueType :db.type/ref
;;   :db/cardinality :db.cardinality/one}

;;  {:db/ident :authz/target
;;   :db/doc "The ref to a user or group"
;;   :db/valueType :db.type/ref
;;   :db/cardinality :db.cardinality/one}
 ]